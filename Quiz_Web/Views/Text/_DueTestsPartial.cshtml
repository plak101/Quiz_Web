@model List<Quiz_Web.Models.Entities.TestAssignment>

@if (Model == null || !Model.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-clipboard-check fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No Due Tests</h4>
        <p class="text-muted">You're all caught up! No tests are due at the moment.</p>
    </div>
}
else
{
    <div class="row g-4">
        @foreach (var assignment in Model)
        {
            var daysLeft = assignment.Assignment.DueAt.HasValue 
                ? (assignment.Assignment.DueAt.Value - DateTime.UtcNow).Days 
                : 0;
            var isUrgent = daysLeft <= 2;

            <div class="col-12 col-md-6 col-lg-4">
                <div class="card h-100 shadow-sm test-card @(isUrgent ? "border-danger" : "")">
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <span class="badge @(isUrgent ? "bg-danger" : "bg-warning")">
                                @(isUrgent ? "Urgent" : "Due Soon")
                            </span>
                            @if (assignment.Test.TimeLimitSec.HasValue)
                            {
                                <span class="badge bg-secondary">
                                    <i class="fas fa-clock me-1"></i>@(assignment.Test.TimeLimitSec / 60) min
                                </span>
                            }
                        </div>
                        <h5 class="card-title">@assignment.Test.Title</h5>
                        <p class="card-text text-muted small flex-grow-1">
                            @if (!string.IsNullOrEmpty(assignment.Test.Description))
                            {
                                @(assignment.Test.Description.Length > 100 
                                    ? assignment.Test.Description.Substring(0, 100) + "..." 
                                    : assignment.Test.Description)
                            }
                            else
                            {
                                <span>No description available</span>
                            }
                        </p>
                        <div class="mb-3">
                            <small class="text-muted d-block">
                                <i class="fas fa-chalkboard-teacher me-1"></i>@assignment.Assignment.Class.Name
                            </small>
                            <small class="text-muted d-block">
                                <i class="fas fa-user me-1"></i>@assignment.Test.Owner.FullName
                            </small>
                            @if (assignment.Assignment.DueAt.HasValue)
                            {
                                <small class="@(isUrgent ? "text-danger" : "text-warning") d-block mt-2 fw-bold">
                                    <i class="fas fa-exclamation-circle me-1"></i>Due in @daysLeft day@(daysLeft != 1 ? "s" : "")
                                </small>
                            }
                            @if (assignment.Test.Questions.Any())
                            {
                                <small class="text-muted d-block">
                                    <i class="fas fa-question-circle me-1"></i>@assignment.Test.Questions.Count questions
                                </small>
                            }
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-auto">
                            @if (assignment.AttemptsAllowed.HasValue)
                            {
                                <small class="text-muted">
                                    <i class="fas fa-redo me-1"></i>@assignment.AttemptsAllowed attempts
                                </small>
                            }
                            <a href="/test/@assignment.TestId/start" class="btn btn-sm btn-primary">
                                <i class="fas fa-play me-1"></i>Start Test
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<style>
    .test-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-left: 4px solid #ffc107;
    }

    .test-card.border-danger {
        border-left-color: #dc3545;
    }

    .test-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15) !important;
    }

    .test-card .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
    }

    .test-card .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }
</style>