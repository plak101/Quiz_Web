@model List<Quiz_Web.Models.Entities.TestAttempt>

@if (Model == null || !Model.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-trophy fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No Completed Tests</h4>
        <p class="text-muted">Your completed test results will appear here.</p>
    </div>
}
else
{
    <div class="row g-4">
        @foreach (var attempt in Model)
        {
            var scorePercentage = attempt.MaxScore.HasValue && attempt.MaxScore.Value > 0
                ? (attempt.Score ?? 0) / attempt.MaxScore.Value * 100
                : 0;
            var isPassed = scorePercentage >= 60;

            <div class="col-12 col-md-6 col-lg-4">
                <div class="card h-100 shadow-sm test-card">
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <span class="badge @(isPassed ? "bg-success" : "bg-danger")">
                                @(isPassed ? "Passed" : "Failed")
                            </span>
                            <span class="badge bg-info">
                                @scorePercentage.ToString("F0")%
                            </span>
                        </div>
                        <h5 class="card-title">@attempt.Test.Title</h5>
                        <p class="card-text text-muted small flex-grow-1">
                            @if (!string.IsNullOrEmpty(attempt.Test.Description))
                            {
                                @(attempt.Test.Description.Length > 100 
                                    ? attempt.Test.Description.Substring(0, 100) + "..." 
                                    : attempt.Test.Description)
                            }
                            else
                            {
                                <span>No description available</span>
                            }
                        </p>
                        <div class="mb-3">
                            <small class="text-muted d-block">
                                <i class="fas fa-user me-1"></i>@attempt.Test.Owner.FullName
                            </small>
                            @if (attempt.SubmittedAt.HasValue)
                            {
                                <small class="text-muted d-block">
                                    <i class="fas fa-calendar-check me-1"></i>@attempt.SubmittedAt.Value.ToString("MMM dd, yyyy HH:mm")
                                </small>
                            }
                            @if (attempt.TimeSpentSec.HasValue)
                            {
                                <small class="text-muted d-block">
                                    <i class="fas fa-clock me-1"></i>Time: @(attempt.TimeSpentSec / 60) min
                                </small>
                            }
                        </div>
                        <div class="score-display mb-3 p-3 rounded text-center @(isPassed ? "bg-success-subtle" : "bg-danger-subtle")">
                            <h3 class="mb-0 @(isPassed ? "text-success" : "text-danger")">
                                @(attempt.Score?.ToString("F1") ?? "0") / @(attempt.MaxScore?.ToString("F1") ?? "0")
                            </h3>
                            <small class="text-muted">Your Score</small>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-auto">
                            <a href="/test/@attempt.TestId/review/@attempt.AttemptId" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-eye me-1"></i>Review
                            </a>
                            @if (attempt.Test.MaxAttempts == null || attempt.Test.MaxAttempts > 1)
                            {
                                <a href="/test/@attempt.TestId/retake" class="btn btn-sm btn-secondary">
                                    <i class="fas fa-redo me-1"></i>Retake
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<style>
    .test-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-left: 4px solid #28a745;
    }

    .test-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15) !important;
    }

    .test-card .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #333;
    }

    .score-display {
        border: 2px solid currentColor;
    }

    .bg-success-subtle {
        background-color: rgba(40, 167, 69, 0.1);
        border-color: #28a745;
    }

    .bg-danger-subtle {
        background-color: rgba(220, 53, 69, 0.1);
        border-color: #dc3545;
    }
</style>